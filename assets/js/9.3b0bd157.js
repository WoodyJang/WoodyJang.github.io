(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{182:function(t,s,a){"use strict";a.r(s);var n=a(0),o=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"深入理解javascript执行流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#深入理解javascript执行流程","aria-hidden":"true"}},[t._v("#")]),t._v(" 深入理解JavaScript执行流程")]),t._v(" "),a("h2",{attrs:{id:"一、内存空间"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、内存空间","aria-hidden":"true"}},[t._v("#")]),t._v(" 一、内存空间")]),t._v(" "),a("p",[t._v("内存空间这部分内容，其实前端是很少涉及的，因为js有自己的内存回收机制，所以内存空间不用手动回收，但是理解js内存管理，可以让我们更好的理解js的执行流程，帮助我们写出性能更好的代码。")]),t._v(" "),a("h4",{attrs:{id:"堆和栈"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#堆和栈","aria-hidden":"true"}},[t._v("#")]),t._v(" 堆和栈")]),t._v(" "),a("p",[t._v("栈中存储的是基本数据类型（string、booelan、number、null、undefined以及symbol）的key和value，以及引用类型的key和地址，引用类型的value存储在堆中")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a1 "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   \n"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a2 "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'this is string'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a3 "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("null")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" m"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("20")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" c "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("2")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("3")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),a("p",[a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/6/28/16b9b8fe993ca241?imageView2/0/w/1280/h/960/format/webp/ignore-error/1",alt:"堆栈"}})]),t._v(" "),a("ul",[a("li",[a("p",[t._v("基础数据类型是按值访问的。")])]),t._v(" "),a("li",[a("p",[t._v("引用类型是按引用访问的。因为JavaScript不允许直接访问堆内存中的位置，因此我们不能直接操作对象的堆内存空间。在操作对象时，实际上是在操作对象的引用而不是实际的对象。因此，引用类型的值都是按引用访问的。这里的引用，我们可以粗浅地理解为保存在变量对象中的一个地址，该地址与堆内存的实际值相关联。")])])]),t._v(" "),a("h2",{attrs:{id:"二、执行上下文（execution-context）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、执行上下文（execution-context）","aria-hidden":"true"}},[t._v("#")]),t._v(" 二、执行上下文（Execution Context）")]),t._v(" "),a("p",[t._v("定义：执行上下文就是当前 JavaScript 代码被解析和执行时所在环境的抽象概念， JavaScript 中运行任何的代码都是在执行上下文中运行。")]),t._v(" "),a("p",[t._v("来个例子：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("foo")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'foo1'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{attrs:{class:"token function"}},[t._v("foo")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{attrs:{class:"token comment"}},[t._v("// foo2")]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("foo")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'foo2'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{attrs:{class:"token function"}},[t._v("foo")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// foo2")]),t._v("\n\n")])])]),a("p",[t._v("为什么上面2个结果都是 foo2？js到底是如何执行的？")]),t._v(" "),a("p",[t._v("这是因为 JavaScript 引擎并非一行一行地分析和执行程序，而是一段一段地分析执行。当执行一段代码的时候，会进行一个“准备工作”，比如上例中的函数提升。这个准备工作就叫做执行上下文。")]),t._v(" "),a("ul",[a("li",[t._v("执行上下文的生命周期可以分为三个阶段：创建阶段、执行阶段、回收阶段。重点是创建阶段。")]),t._v(" "),a("li",[t._v("执行上下文的组成为：变量对象、作用域链、this。")])]),t._v(" "),a("p",[t._v("创建阶段其实就是创建变量对象、创建作用域涟、绑定this指向。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/6/28/16b9b9f37abf22da?imageView2/0/w/1280/h/960/format/webp/ignore-error/1",alt:"执行上下文"}})]),t._v(" "),a("h4",{attrs:{id:"执行上下文的类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#执行上下文的类型","aria-hidden":"true"}},[t._v("#")]),t._v(" 执行上下文的类型")]),t._v(" "),a("blockquote",[a("p",[t._v("全局执行上下文")])]),t._v(" "),a("ol",[a("li",[t._v("创建一个全局对象，在浏览器中这个全局对象就是 window 对象。")]),t._v(" "),a("li",[t._v("将 this 指针指向这个全局对象。一个程序中只能存在一个全局执行上下文。")])]),t._v(" "),a("blockquote",[a("p",[t._v("函数执行上下文")])]),t._v(" "),a("p",[t._v("每次调用函数时，都会为该函数创建一个新的执行上下文。每个函数都拥有自己的执行上下文，但是只有在函数被调用的时候才会被创建。一个程序中可以存在任意数量的函数执行上下文。")]),t._v(" "),a("blockquote",[a("p",[t._v("eval执行上下文")])]),t._v(" "),a("p",[t._v("运行在 eval 函数中的代码也获得了自己的执行上下文。")]),t._v(" "),a("h4",{attrs:{id:"执行上下文栈（execution-context-stack，ecs）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#执行上下文栈（execution-context-stack，ecs）","aria-hidden":"true"}},[t._v("#")]),t._v(" 执行上下文栈（Execution context stack，ECS）")]),t._v(" "),a("p",[t._v("接下来问题来了，我们写的函数多了去了，如何管理创建的那么多执行上下文呢？")]),t._v(" "),a("p",[t._v("所以 JavaScript 引擎创建了执行上下文栈（Execution context stack，ECS）来管理执行上下文")]),t._v(" "),a("p",[t._v("当执行一个函数的时候，就会创建一个执行上下文，并且压入执行上下文栈，当函数执行完毕的时候，就会将函数的执行上下文从栈中弹出")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/6/28/16b9bed658b66465?imageslim",alt:"执行上下文栈"}})]),t._v(" "),a("h2",{attrs:{id:"三、变量对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、变量对象","aria-hidden":"true"}},[t._v("#")]),t._v(" 三、变量对象")]),t._v(" "),a("p",[t._v("变量对象是与执行上下文相关的数据作用域，存储了在上下文中定义的变量和函数声明。")]),t._v(" "),a("p",[t._v("因为不同执行上下文下的变量对象稍有不同，所以我们来聊聊全局上下文下的变量对象和函数上下文下的变量对象。")]),t._v(" "),a("h4",{attrs:{id:"全局执行上下文的变量对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全局执行上下文的变量对象","aria-hidden":"true"}},[t._v("#")]),t._v(" 全局执行上下文的变量对象")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("// 以浏览器中为例，全局对象为window")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 全局上下文创建阶段")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// VO 为变量对象（Variable Object）的缩写")]),t._v("\nwindowEC "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token constant"}},[t._v("VO")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Window"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    scopeChain"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("this")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Window\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h4",{attrs:{id:"函数执行上下文的变量对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数执行上下文的变量对象","aria-hidden":"true"}},[t._v("#")]),t._v(" 函数执行上下文的变量对象")]),t._v(" "),a("p",[t._v("变量对象存储了执行上下文中的变量和函数声明，但在函数上下文中，还多了一个arguments(函数参数列表), 一个伪数组对象。并且这里的VO是通过arguments来初始化的。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/6/28/16b9bccd1d1efff1?imageView2/0/w/1280/h/960/format/webp/ignore-error/1",alt:"函数变量对象"}})]),t._v(" "),a("p",[t._v("当进入执行上下文时，这时候还没有执行代码，")]),t._v(" "),a("p",[t._v("变量对象会包括：")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("函数的所有形参 (如果是函数上下文)")]),t._v(" "),a("ol",[a("li",[t._v("由名称和对应值组成的一个变量对象的属性被创建")]),t._v(" "),a("li",[t._v("没有实参，属性值设为 undefined")])])]),t._v(" "),a("li",[a("p",[t._v("函数声明")]),t._v(" "),a("ol",[a("li",[t._v("由名称和对应值（函数对象(function-object)）组成一个变量对象的属性被创建")]),t._v(" "),a("li",[t._v("如果变量对象已经存在相同名称的属性，则完全替换这个属性")])])]),t._v(" "),a("li",[a("p",[t._v("变量声明")]),t._v(" "),a("ol",[a("li",[t._v("由名称和对应值（undefined）组成一个变量对象的属性被创建；")]),t._v(" "),a("li",[t._v("如果变量名称跟已经声明的形式参数或函数相同，则变量声明不会干扰已经存在的这类属性")])])])]),t._v(" "),a("p",[t._v("举个例子")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("foo")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("2")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("c")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{attrs:{class:"token function-variable function"}},[t._v("d")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  b "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("3")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{attrs:{class:"token function"}},[t._v("foo")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"进入执行上下文"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#进入执行上下文","aria-hidden":"true"}},[t._v("#")]),t._v(" 进入执行上下文")]),t._v(" "),a("p",[t._v("函数未进入执行阶段之前，变量对象中的属性都不能访问！但是进入执行阶段之后，变量对象（VO）转变为了活动对象（AO），然后开始进行执行阶段的操作。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token constant"}},[t._v("AO")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    arguments"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        length"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    a"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    b"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" undefined"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    c"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" reference to "),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("c")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    d"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" undefined\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h4",{attrs:{id:"代码执行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码执行","aria-hidden":"true"}},[t._v("#")]),t._v(" 代码执行")]),t._v(" "),a("p",[t._v("在代码执行阶段，会顺序执行代码，根据代码，修改变量对象的值")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token constant"}},[t._v("AO")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    arguments"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        length"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    a"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    b"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("3")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    c"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" reference to "),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("c")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    d"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" reference to FunctionExpression "),a("span",{attrs:{class:"token string"}},[t._v('"d"')]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("当遇到函数和变量同名且都会被提升的情况，函数声明优先级比较高，因此变量声明会被函数声明所覆盖，但是可以重新赋值")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token function"}},[t._v("alert")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{attrs:{class:"token comment"}},[t._v("//输出：function a(){ alert('我是函数') }")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("a")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("alert")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'我是函数'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token comment"}},[t._v("//")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'我是变量'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("alert")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{attrs:{class:"token comment"}},[t._v("//输出：'我是变量'")]),t._v("\n\n")])])])])}],!1,null,null,null);o.options.__file="execute.md";s.default=o.exports}}]);